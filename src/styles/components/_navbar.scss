// src/styles/components/_navbar.scss
@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
@use "../abstracts/fonts" as *;

.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 60px; // Fixed height for the navbar
  background-color: $black;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 2rem;
  z-index: 1000;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3); // Subtle shadow for depth

  @include respond-to(max-width, $breakpoint-md) { // Changed $breakpoint-md to $breakpoint-md
    padding: 0 1rem;
  }

&__logo {
    font-family: $font-orbitron;
    font-weight: 700;
    font-size: 1.5rem;
    color: #f30000;
    -webkit-text-stroke: 1px #f30000;
    text-transform: uppercase;

    padding: 0;   // ditch the old padding
    cursor: pointer;
    text-shadow: none; // drop the old shadow

    @include respond-to(max-width, $breakpoint-sm) {
      font-size: 1.2rem;
    }

 
    background: none !important;
    border: none !important;
    @include respond-to(max-width, $breakpoint-sm) { // Changed $breakpoint-sm to $breakpoint-sm
      font-size: 1.2rem;
      padding: 0.4rem 0.8rem;
    }
  }

  &__icons {
    display: flex;
    align-items: center; // Ensure icons are vertically aligned
    gap: 1.5rem; // Space between icons

    @include respond-to(max-width, $breakpoint-sm) { // Changed $breakpoint-sm to $breakpoint-sm
      gap: 1rem;
    }
  }

  &__icon-button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative; // For positioning potential hover effects
    outline: none; // Remove default outline

    svg {
      width: 28px; // Slightly larger icons
      height: 28px;
      transition: fill 0.2s ease-out; // Smooth transition for fill color

      path {
        fill: $white; // Default icon color
      }
    }

    // Hover state managed by GSAP in JS for more complex animations
    // but basic CSS hover for immediate feedback is good
    &:hover {
      svg path {
        fill: $brand-red; // Change color on hover
      }
    }

    // Focus state for keyboard navigation
    &:focus-visible {
      outline: 2px solid $brand-red;
      outline-offset: 2px;
    }
  }

  // Hamburger and Close icons specific styles for their swapping
  // They will now naturally flow within the flex container.
  &__hamburger,
  &__close {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__search,
  &__contact {
    // No specific positioning needed, they rely on flexbox
  }
}

// Adjusting the order of hamburger/close to ensure they stack correctly
// and the current active one is clickable. This is mostly handled by JS display property.
.navbar__hamburger {
  // Styles for the hamburger when visible
}

.navbar__close {
  // Styles for the close icon when visible
}